---
- name: Setup deployment directory
  block:
    - name: Clear config dir (if any, in case this is a re-run)
      file:
        path: "{{ item }}"
        state: absent
      with_items:
      - "{{ deployment_directory }}"

    - name: Create config dir
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      with_items:
      - "{{ deployment_directory }}"
  tags: clusterconfigs

- name: Verify that SSH key for {{ ansible_user }} exists
  stat:
    path: "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
  register: sshkeypath
  tags: installconfig

- name: Get the contents of the ssh key for {{ ansible_user }}
  slurp:
    src: "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
  register: sshkey
  when: sshkeypath.stat.exists == true
  tags: installconfig

- name: Set Fact for the ssh key of {{ ansible_user }}
  set_fact:
    ssh_pubkey: "{{ sshkey['content'] | b64decode }}"
  tags: installconfig

- name: Set Fact of num of workers and masters based on inventory
  set_fact:
    numworkers: "{{ groups['workers'] | default([]) | length }}"
    nummasters: "{{ groups['masters'] | length }}"
  tags:
  - always
  - validation
  - installconfig

- name: Generate install-config.yaml
  template:
    src: install-config.j2
    dest: "{{ deployment_directory }}/install-config.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  when:
  - pullsecret is defined
  - pullsecret != ""
  tags: installconfig

- name: Make a backup of the install-config.yaml file
  copy:
    src: "{{ deployment_directory }}/install-config.yaml"
    dest: "{{ deployment_directory }}/install-config.yaml.bkup"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
    remote_src: yes
  tags: installconfig
